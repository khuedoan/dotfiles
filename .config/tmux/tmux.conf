#+----------+
#| Settings |
#+----------+

# Options
set-option -g base-index 1                      # Start windows numbering at 1
set-option -g default-terminal "xterm-256color" # Setting the correct term
set-option -g history-limit 10000               # Increase scrollback buffer size
set-option -g mouse on                          # Turn mouse-mode on
set-option -g renumber-windows on               # Renumber windows when a window is closed
set-option -g set-titles on                     # Set the client terminal title
set-option -g status-interval 1                 # Refresh status more often
set-option -g status-keys vi                    # Vi key bindings in tmux command prompt
set-option -g terminal-overrides "*:Tc"         # Support RGB color
set-option -s escape-time 0                     # Faster vim mode switching
set-window-option -g automatic-rename on        # Rename window to reflect current program
set-window-option -g mode-keys vi

#+-------+
#| Theme |
#+-------+

# Window
set-option -g window-style "bg=black"
set-option -g window-active-style "bg=terminal"

# Status
set -g status-style "bg=black"

set -g status-left " #{session_name} "
set -g status-left-style "bg=cyan,fg=black"

set-window-option -g window-status-separator ""
set-window-option -g window-status-style "bg=terminal,fg=terminal"
set-window-option -g window-status-current-style "bg=brightwhite,fg=black"
set-window-option -g window-status-activity-style "bg=red,fg=black"
set-window-option -g window-status-format " #{window_index}: #{window_name} "
set-window-option -g window-status-current-format "\
#{?window_zoomed_flag,#[bg=yellow],}#{?client_prefix,#[bg=green],} \
#{window_index}: #{window_name} \
"

set -g status-right "\
#[fg=blue]#[bg=blue,fg=black] \
 %R \
#[bg=blue,fg=yellow]#[bg=yellow,fg=black] \
 %a, %b %d \
"

# Borders
set-option -g pane-border-style "bg=black,fg=#000000"
set-option -g pane-active-border-style "bg=black,fg=#000000"

#+--------------+
#| Key bindings #
#+--------------+

# Prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Focus pane
bind-key -n M-h select-pane -L
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U
bind-key -n M-l select-pane -R
bind-key -n M-` select-window -l
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-` select-window -l

# Swap pane
bind-key -n M-H swap-pane -s '{left-of}'
bind-key -n M-J swap-pane -s '{down-of}'
bind-key -n M-K swap-pane -s '{up-of}'
bind-key -n M-L swap-pane -s '{right-of}'

# Resize pane
bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2
bind-key -n M-f resize-pane -Z

# Focus window or create if not exist
bind-key -n M-1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key -n M-2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key -n M-3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key -n M-4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key -n M-5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key -n M-6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key -n M-7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key -n M-8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind-key -n M-9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'

# Automatically choose split direction with longest side scheme
bind-key -n M-Enter if-shell '[ "$(expr 25 \* #{pane_height} / 10 )" -lt "#{pane_width}" ]' \
    'split-pane -h -c "#{pane_current_path}"' \
    'split-pane -v -c "#{pane_current_path}"'

# Kill pane
bind-key -n M-Q kill-pane

# Copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Settings
bind-key -n M-R source-file ~/.config/tmux/tmux.conf\; display-message "Config reloaded"
bind-key -n M-m set-option -g mouse\; display-message "Mouse #{?mouse,on,off}"
