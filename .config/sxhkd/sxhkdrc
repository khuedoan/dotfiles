###########
# Windows #
###########

# Close or kill window
super + shift + {_,ctrl + }q
    bspc node -{c,k}
# Focus or swap window in the current workspace
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}
# Focus the given workspace or move window to that workspace
super + {_,shift + }{1-9,0}
    bspc {desktop -f, node -d} '^{1-9,10}'
# Focus the next/previous window
super + {_,shift + }grave
    bspc node -f {next,prev}.local.!hidden.window
# Focus the last workspace
super + Tab
    bspc desktop -f last
# Move floating windows
super + ctrl + shift + {h,j,k,l}
    bspc node -v {-50 0,0 50,0 -50,50 0}

#############
# Preselect #
#############

# Preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}
# Cancel the preselection for the focused desktop
super + ctrl + Escape
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

##############
# Properties #
##############

# Toggle fullscreen
super + f
    bspc desktop -l next
# Toggle floating state
super + shift + f
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
    else \
        bspc node focused -t tiled; \
    fi
# Toggle sticky flag
super + s
    bspc node -g sticky

##############
# Media keys #
##############

# Volume
{XF86AudioMute,XF86AudioLowerVolume,XF86AudioRaiseVolume}
    amixer -q set Master {toggle,5%- unmute,5%+ unmute}
super + {button2,button5,button4}
    amixer -q set Master {toggle,5%- unmute,5%+ unmute}
# Player
{XF86AudioPrev,XF86AudioPlay,XF86AudioNext}
    playerctl {previous,play-pause,next}
# Brightness
{XF86MonBrightnessDown,XF86MonBrightnessUp}
    light {-U,-A} 10
# Screenshot
{_,ctrl + ,alt + }Print
    maim {_,-s,-i $(xdotool getactivewindow)} --noopengl \
        | xclip -selection clipboard -t image/png -i && \
        notify-send -t 1000 "Sceenshot" "Copied to clipboard"
shift + {_,ctrl + ,alt + }Print
    mkdir -p $HOME/Pictures/Screenshots/ && \
    maim {_,-s,-i $(xdotool getactivewindow)} --noopengl \
        $HOME/Pictures/Screenshots/$(date +screenshot-%Y%m%d-%H%M%S.png) && \
        notify-send -t 1000 "Sceenshot" "Saved in ~/Pictures/Screenshots"

################
# Quick launch #
################

# Run command
super + space
    dmenu_run -p  "Run"
# Terminal
super + Return
    st
# Web browser
super + {_,shift + }w
    firefox {_,--private-window}
# File explorer
super + e
    pcmanfm
# Key bindings list
super + slash
    MENU="rofi -dmenu -p Help -i" sxhkd-help
# Power menu
super + Escape
    MENU="rofi -dmenu -p Power -i" power-menu
# Monitor menu
super + shift + m
    dmenu-monitor
# Lock screen
super + BackSpace
    slock

# Bitwarden menu
super + p
    bitwarden-menu

# Audio
super + a
    pactl list short sinks | cut -f 2 | rofi -dmenu | xargs pactl set-default-sink

# OTP menu
super + shift + p
    MENU="rofi -dmenu -p OTP -i" otp
